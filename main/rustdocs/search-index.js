var searchIndex = new Map(JSON.parse('[\
["log",{"t":"PPPPPPGGKFFPFFFSFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNMNNNNNNNQNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNMQQHNNHNNNNNNNNNNNNNNHHHHNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNQ","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::result"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,10,4,4,6,6,8,7,12,0,1,3,1,3,10,4,4,6,6,1,3,8,7,17,17,12,12,4,6,1,3,8,7,17,12,4,6,4,6,8,7,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,1,3,10,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,0],"f":"`````````````````````{bd}{{fd}f}{hj}{lj}{ce{}{}}000000000000000{fb}{nA`}{{}f}{{}n}{hh}{ll}{bb}{A`A`}{{hh}Ab}{{ll}Ab}{{A`A`}Ab}{{nn}Ab}`98{{AdA`}Af}{{hl}Af}{{hh}Af}{{lh}Af}{{ll}Af}{{A`A`}Af}{{nn}Af}{{AhAh}Af}`{b{{Aj{j}}}}{{f{Aj{j}}}f}10{AdAl}{{hAn}B`}0{{lAn}B`}0{{bAn}B`}{{fAn}B`}{{A`An}B`}{{nAn}B`}{{BbAn}B`}0{{AhAn}B`}0{cc{}}0000000{j{{Bd{hc}}}{}}{j{{Bd{lc}}}{}}{{hc}AlBf}{{lc}AlBf}{{A`c}AlBf}{{nc}AlBf}`{ce{}{}}0000000{{}{{`{{Bj{}{{Bh{h}}}}}}}}{{}{{`{{Bj{}{{Bh{l}}}}}}}}{bh}{{fh}f}{A`h}{{nh}n}{b{{Aj{Bl}}}}{{f{Aj{Bl}}}f}{{Adb}Al}``{{}Ad}{{}h}{{}l}0{bA`}{{fA`}f}{b{{Aj{j}}}}{{f{Aj{j}}}f}10{{}f}{{}n}{{hh}{{Aj{Ab}}}}{{hl}{{Aj{Ab}}}}{{ll}{{Aj{Ab}}}}{{lh}{{Aj{Ab}}}}{{A`A`}{{Aj{Ab}}}}{{nn}{{Aj{Ab}}}}{Ad{{Bd{AlBb}}}}0{lAl}0{bj}{{fj}f}{A`j}{{nj}n}{l{{Aj{h}}}}{hl}`{c{{Bd{e}}}{}{}}000000000000000{cBn{}}0000000`","D":"Kd","p":[[5,"Record",0],[5,"Arguments",170],[5,"RecordBuilder",0],[6,"Level",0],[1,"str"],[6,"LevelFilter",0],[5,"MetadataBuilder",0],[5,"Metadata",0],[6,"Ordering",171],[10,"Log",0],[1,"bool"],[5,"ParseLevelError",0],[6,"Option",172],[1,"unit"],[5,"Formatter",170],[8,"Result",170],[5,"SetLoggerError",0],[6,"Result",173],[10,"Hasher",174],[17,"Item"],[10,"Iterator",175],[1,"u32"],[5,"TypeId",176]],"r":[],"b":[[57,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[58,"impl-PartialEq-for-Level"],[59,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[60,"impl-PartialEq-for-LevelFilter"],[70,"impl-Display-for-Level"],[71,"impl-Debug-for-Level"],[72,"impl-Display-for-LevelFilter"],[73,"impl-Debug-for-LevelFilter"],[78,"impl-Debug-for-SetLoggerError"],[79,"impl-Display-for-SetLoggerError"],[80,"impl-Display-for-ParseLevelError"],[81,"impl-Debug-for-ParseLevelError"],[128,"impl-PartialOrd-for-Level"],[129,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[130,"impl-PartialOrd-for-LevelFilter"],[131,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFAACAAaAA8ALgAHADcAAQA6AAYARwALAFsABQCBAAUAkgAXAA=="}],\
["wasm",{"t":"PPPPGPPPPPPPPPPPPPPPPPPPPPIGPFPPFNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNQHCOFKNNNNNNNNNNPPGPNNNNNNNNNNNNNN","n":["DivideBy0","EndInvalidValueStack","Eof","Err","Error","ExprMissingEnd","GlobalIsConst","InvalidExportDesc","InvalidFuncType","InvalidGlobalIdx","InvalidImportDesc","InvalidInstr","InvalidLimitsType","InvalidLocalIdx","InvalidMagic","InvalidMutType","InvalidNumType","InvalidRefType","InvalidSectionType","InvalidValType","InvalidValueStackType","InvalidVecType","InvalidVersion","MalformedUtf8String","MoreThanOneMemory","Ok","Result","RuntimeError","RuntimeError","RuntimeInstance","SectionOutOfOrder","UnrepresentableResult","ValidationInfo","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","from","from","from","from","hook_set","hooks","into","into","into","into","invoke_func","new","new_with_hooks","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unreachable_validated","validate","value_stack","wasm_bytecode","EmptyHookSet","HookSet","borrow","borrow_mut","default","from","instruction_hook","instruction_hook","into","try_from","try_into","type_id","Activation","Label","StackEntry","Value","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_activation","into_label","into_value","to_owned","try_from","try_into","type_id"],"q":[[0,"wasm"],[82,"wasm::hooks"],[94,"wasm::value_stack"],[112,"wasm::core::error"],[113,"core::fmt"],[114,"wasm::execution"],[115,"wasm::execution::hooks"],[116,"wasm::validation"],[117,"alloc::string"],[118,"core::result"],[119,"core::any"],[120,"wasm::execution::value_stack"]],"i":[1,2,2,9,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,0,0,2,0,2,1,0,7,11,1,2,7,11,1,2,1,2,1,2,1,2,1,2,2,7,11,1,2,7,0,7,11,1,2,7,7,7,1,2,2,7,11,1,2,7,11,1,2,7,11,1,2,0,0,0,7,0,0,12,12,12,12,10,10,12,12,12,12,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],"f":"`````````````````````````````````{ce{}{}}0000000{bb}{dd}{{ce}f{}{}}0{{bb}h}{{dd}h}{{bj}l}{{dj}l}0{cc{}}000``8888{{{n{c}}A`e}{{Ab{g}}}Ad``}{Af{{Ab{{n{Ah}}}}}}{{Afc}{{Ab{{n{c}}}}}Ad};;{cAj{}}{c{{Al{e}}}{}{}}0000000{cAn{}}000`{{{Bb{B`}}}{{Ab{Af}}}}````??{{}Ah}8{{{n{Ad}}}f}0{ce{}{}}554````00{BdBd}{{ce}f{}{}}{{Bdj}l}=3```3887","D":"Cb","p":[[6,"RuntimeError",0,112],[6,"Error",0,112],[1,"unit"],[1,"bool"],[5,"Formatter",113],[8,"Result",113],[5,"RuntimeInstance",0,114],[1,"usize"],[8,"Result",0,112],[10,"HookSet",82,115],[5,"ValidationInfo",0,116],[5,"EmptyHookSet",82,115],[5,"String",117],[6,"Result",118],[5,"TypeId",119],[1,"u8"],[1,"slice"],[6,"StackEntry",94,120]],"r":[[4,112],[26,112],[27,112],[29,114],[32,116],[55,114],[79,116],[80,114],[82,115],[83,115],[96,120]],"b":[[48,"impl-Display-for-Error"],[49,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFcACwAAAAMABQAJABAACQAbAAUAIgAQADcAAQA+ABQAVQACAFwABABiAAUAbQADAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
